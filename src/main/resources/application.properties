server.port = 80

# JDBC연동
# 1. 해당 JDBC 클래스를 호출한다.
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
# 2. 해당 JDBC 클래스를 이용한 접속할 DB 서버 경로 설정
spring.datasource.url = jdbc:mysql://localhost:3306/springweb2
# 3. DB서버의 아이디와 비밀번호
spring.datasource.username=root
spring.datasource.password=1234
# 4. JPA DDL에 대해 옵션 추가

# 1. 서버 켜질때 DDL 생성여부
spring.jpa.hibernate.ddl-auto = create

# 작업시 테스트 확인용
# 5. JPA 가 SQL 실행한 결과 보고 있을 때 CONSOLE 에 실행 된 SQL 표시 하는방법
#spring.jpa.properties.hibernate.show_sql=true
# 6. CONSOLE 에 실행된 SQL 작성시 엔터 처리 하는방법
#spring.jpa.properties.hibernate.format_sql=true

# 7. 샘플데이터
spring.sql.init.mode = always;
spring.jpa.defer-datasource-initialization = true

# 1. ===================== 카카오
#0. 스프링은 카카오 회사를 모르기때문에 클라이언트 이름을 정의해주어야 한다.
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect_uri=http://localhost:80/login/oauth2/code/kakao

spring.security.oauth2.client.registration.kakao.client-id=64ed99dec3f288b6afd22e290b3060f4
spring.security.oauth2.client.registration.kakao.client-secret=iw11DKzpds149h7Eq4nWsrIqk2p1G0ZR
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
# 2======================= 네이버
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.user-name-attribute=response
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me

spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect_uri=http://localhost:80/login/oauth2/code/naver

spring.security.oauth2.client.registration.naver.client-id=eORkzFw4xGaZgsPcPxqU
spring.security.oauth2.client.registration.naver.client-secret=XXj5mCdY0H
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.scope=nickname,email

# 3. ===================== 구글 ( 스프링에서 설정 제공 )
spring.security.oauth2.client.registration.google.client-id=41249889281-76na5mlg8413j4kor0jd12ge04os1t46.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile